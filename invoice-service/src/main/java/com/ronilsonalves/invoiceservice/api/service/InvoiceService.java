package com.ronilsonalves.invoiceservice.api.service;

import com.ronilsonalves.invoiceservice.data.dto.InvoiceRequestBody;
import com.ronilsonalves.invoiceservice.data.model.Invoice;

import java.util.List;
import java.util.UUID;

public interface InvoiceService {

    /**
     * Returns a list of invoices, if there no invoices the list returned will be empty
     * @return a list of invoices, if there no invoices the list returned will be empty
     */
    List<Invoice> listAll();

    /**
     * Returns an Invoice with UUID generated by database application
     * @param invoiceRequestBody an invoice DTO object provided to save at database
     * @return an Invoice with ID generated by database application
     * @throws com.ronilsonalves.invoiceservice.exceptionhandler.InvalidUUIDException if there are no appointments with
     * ID provided.
     */
    Invoice create(InvoiceRequestBody invoiceRequestBody);

    /**
     * Returns the object with data updated
     * @param invoiceRequestBody an invoice DTO object to update data of invoice with UUID provided
     * @param uuid invoice identification number
     * @return
     */
    Invoice update(InvoiceRequestBody invoiceRequestBody, UUID uuid);

    /**
     * Returns an invoice with provided ID
     * @param invoiceId key to find the invoice at database
     * @return an invoice with provided ID
     * @throws com.ronilsonalves.invoiceservice.exceptionhandler.ResourceNotFoundException if invoiceId provided is
     * not found at database
     */
    Invoice getInvoiceByID(UUID invoiceId);

    /**
     * Returns a list of invoices from a patient from their RG document
     * @param patientRG brazilian ID document used to verify if the patient have any invoice registered at database
     * @return a list of invoices from a patient from their RG document
     * @throws com.ronilsonalves.invoiceservice.exceptionhandler.ResourceNotFoundException if patientRG provided not
     * found at database
     */
    List<Invoice> getInvoicesByPatientRG(String patientRG);

    /**
     * Returns a list of invoices where a dentist was the provider of dental services
     * @param dentistCRO brazilian profession council ID document used to verify if the dentist have any invoice
     *                   registered at database as provider
     * @return a list of invoices where a dentist was the provider of dental services
     * @throws com.ronilsonalves.invoiceservice.exceptionhandler.ResourceNotFoundException if dentistCRO provided not
     * found at database
     */
    List<Invoice> getInvoicesByDentistCRO(String dentistCRO);

    /**
     * @param invoiceId used to verify if exists an invoice registered at database
     * @throws com.ronilsonalves.invoiceservice.exceptionhandler.ResourceNotFoundException if invoiceID provided
     * there no exist at database
     */
    void delete (UUID invoiceId);
}
